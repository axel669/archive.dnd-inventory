import React, {Component, PureComponent} from "react"
import doric from "doric-components"

// import ItemList from "./ItemList.coffee"

import Inventory from "@screen/Inventory.tea"

import yggdrasil from "@core/yggdrasil.tea"

let connect = (store) =>
    (Parent) => class extends Component {
        static displayName = "Connected<${Parent.name ?? Parent.displayName}>"

        constructor(props) => {
            super(props)
            @state = store.getState()
            store.subscribe(
                () => @setState(store.getState())
            )
        }

        render() => <Parent {...@state} />
    }

@connect(yggdrasil.store)
// @doric.dialogify
class Main extends PureComponent {
    render() => {
        let {Screen = Inventory} = this.props.screen
        let props = Screen.propList.reduce(
            (p, name) => {[name]: @props[name]}
            {}
        )

        return <Screen {...props} />
    }
}

export default Main
