import React, {Component, PureComponent} from "react"
import ReactDOM from "react-dom"

import norn from "@axel669/norn/es6/norn.js"

import MainRouter from "@router"
import {state, actions} from "@state"


let bind = (target, key, description) => {
    let {value as unbound, writable, ...desc} = description
    let mut bound = null

    return {
        ...desc
        get() =>* {
            if bound == null {
                bound = unbound.bind(@)
            }
            return bound
        }
    }
}


class Main extends Component {
    constructor(props) => {
        super(props)

        @state = state.current
        state.subscribe(
            (newState) => @setState(newState)
        )
    }

    render() => {
        return <div>
            <CharList chars=@state.chars />
            <BagDisplay bags=@state.bags />
        </div>
    }
}

window.appActions = actions

@MainRouter.connect("/", true)
class CharList extends PureComponent {
    addChar() => {
        let name = prompt("")
        if name == null || name.trim() == "" {
            return
        }

        actions."chars.$add"(name)
    }

    render() => {
        return <div>
            <button onClick=@addChar>Add Char</button>
            {@props.chars.map(
                (ch) => <div key=ch.id>
                    <a href="#/${ch.id}">{ch.name}</a>
                </div>
            )}
        </div>
    }
}

let propSort = (...props) =>
    (first, second) => {
        for prop in props {
            let [a, b] = [first[prop], second[prop]]
            if a < b {
                return -1
            }
            if a > b {
                return 1
            }
        }
        return 0
    }

// let list = [
//     {name: "Herb", id: 3}
//     {name: "Herb", id: 1}
//     {name: "Herb", id: 2}
//     {name: "Thing", id: 1}
//     {name: "Bag", id: 2}
// ]
// console.log(list)
// console.log(list.sort(propSort("name", "id")))

@MainRouter.connect("/:bagID")
class BagDisplay extends PureComponent {
    render() => {
        let {bags, _router: {params}} = @props
        return <Bag bag=bags[params.bagID] bagID=params.bagID />
    }
}
class Bag extends PureComponent {
    @bind
    addItem() => {
        let name = prompt("")
        if name == null || name.trim() == "" {
            return
        }

        actions."bags.$add"(@props.bagID, name)
    }

    render() => {
        console.log(@props)
        return <div>
            <button onClick=@addItem>Add Item</button>
            {@props.bag.list.map(
                (item) => <div key=item.key>{item.name}</div>
            )}
        </div>
    }
}

ReactDOM.render(
    <Main />
    document.querySelector("app-root")
)
